# Generated by Django 3.2.19 on 2023-06-02 08:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bancos',
            fields=[
                ('id_bancos', models.AutoField(primary_key=True, serialize=False)),
                ('bancos_descripcion', models.CharField(blank=True, choices=[('bco1', 'Banco Santander'), ('bco2', 'BBVA'), ('bco3', 'CaixaBank'), ('bco4', 'Banco Sabadell'), ('bco5', 'Bankinter'), ('bco6', 'Unicaja Banco'), ('bco7', 'Abanca'), ('bco8', 'Kutxabank'), ('bco9', 'BCC / Grupo Cajamar'), ('bco10', 'Ibercaja Banco'), ('bco11', 'Banca March'), ('bco12', 'Otro')], max_length=25, null=True, verbose_name='Bancos')),
                ('bancos_estado', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, null=True, verbose_name='Estado del banco')),
            ],
            options={
                'verbose_name': 'Banco',
                'verbose_name_plural': 'Bancos',
                'db_table': 'BANCOS',
                'ordering': ['bancos_estado', 'bancos_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('id_clientes', models.AutoField(primary_key=True, serialize=False)),
                ('cl_apellido1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Primer Apellido')),
                ('cl_apellido2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Segundo Apellido')),
                ('cl_nombre1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Primer Nombre')),
                ('cl_nombre2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Segundo Nombre')),
                ('cl_razon_social', models.CharField(blank=True, max_length=255, null=True, verbose_name='Razón Social')),
                ('cl_documento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número Documento')),
                ('cl_calle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calle')),
                ('cl_numero', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('cl_piso', models.CharField(blank=True, max_length=255, null=True, verbose_name='Piso')),
                ('cl_departamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Departamento')),
                ('cl_telefono1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono I')),
                ('cl_telefono2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono II')),
                ('cl_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E Mail')),
                ('cl_observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
                ('cl_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado del cliente')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'CLIENTES',
                'ordering': ['cl_apellido1', 'cl_nombre1'],
            },
        ),
        migrations.CreateModel(
            name='Comprobantesencabezado',
            fields=[
                ('id_comprobantes_enc', models.AutoField(primary_key=True, serialize=False)),
                ('comprobantes_enc_numero', models.IntegerField(blank=True, editable=False, null=True)),
                ('comprobantes_enc_fecha', models.DateField(null=True, verbose_name='Comprobante Fecha')),
                ('fk_Comprobantesencabezado_Clientes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.clientes', verbose_name='Cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Contratos',
            fields=[
                ('id_contrato', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_inicio_contrato', models.DateField(verbose_name='Fecha de inicio Contrato')),
                ('fecha_cese_contrato', models.DateField(blank=True, null=True, verbose_name='Fecha de cese Contrato')),
                ('contratos_estado', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, null=True, verbose_name='Estado del contrato')),
                ('contratos_observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Contratos varios',
                'db_table': 'CONTRATOS',
                'ordering': ['contratos_estado', 'fecha_inicio_contrato', 'fecha_cese_contrato'],
            },
        ),
        migrations.CreateModel(
            name='Empresas',
            fields=[
                ('id_empresas', models.AutoField(primary_key=True, serialize=False)),
                ('empresa_apellido1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Primer Apellido')),
                ('empresa_apellido2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Segundo Apellido')),
                ('empresa_nombre1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Primer Nombre')),
                ('empresa_nombre2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Segundo Nombre')),
                ('empresa_razon_social', models.CharField(blank=True, max_length=255, null=True, verbose_name='Razón Social')),
                ('empresa_tipo', models.CharField(blank=True, choices=[('tEmp1', 'Física'), ('tEmp2', 'Jurídica')], max_length=8, null=True, verbose_name='Tipo Empresa')),
                ('empresa_documento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número Documento')),
                ('empresa_calle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calle')),
                ('empresa_numero', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('empresa_piso', models.CharField(blank=True, max_length=255, null=True, verbose_name='Piso')),
                ('empresa_departamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Departamento')),
                ('empresa_telefono1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono I')),
                ('empresa_telefono2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono II')),
                ('empresa_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E Mail')),
                ('empresa_observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
                ('empresa_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado de la Empresa')),
            ],
            options={
                'verbose_name': 'Empresa - Arrendador',
                'verbose_name_plural': 'Empresa y Arrendadores',
                'db_table': 'EMPRESAS',
                'ordering': ['empresa_razon_social', 'empresa_apellido1', 'empresa_nombre1'],
            },
        ),
        migrations.CreateModel(
            name='Itemsliquidacion',
            fields=[
                ('id_items_liquidacion', models.AutoField(primary_key=True, serialize=False)),
                ('items_liquidacion_descripcion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Items Liquidación')),
                ('items_liquidacion_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado Items Liquidación')),
            ],
            options={
                'verbose_name': 'Items de liquidación',
                'db_table': 'LIQUIDACION_ITEMS',
                'ordering': ['items_liquidacion_estado', 'items_liquidacion_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Liquidacionencabezado',
            fields=[
                ('id_liquidacion_enc', models.AutoField(primary_key=True, serialize=False)),
                ('liquidacion_enc_fecha', models.DateField(null=True, verbose_name='Fecha de liquidación')),
                ('fk_Liquidacionenc_Contratos', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.contratos', verbose_name='Contratos varios')),
            ],
            options={
                'verbose_name': 'Encabezado de la liquidación',
                'db_table': 'LIQUIDACION_ENCABEZADO',
                'ordering': ['liquidacion_enc_fecha'],
            },
        ),
        migrations.CreateModel(
            name='Paises',
            fields=[
                ('id_pais', models.AutoField(primary_key=True, serialize=False)),
                ('pais_descripcion', models.CharField(blank=True, choices=[(' Afganistán', ' Afganistán'), (' Albania', ' Albania'), (' Alemania', ' Alemania'), (' Andorra', ' Andorra'), (' Angola', ' Angola'), (' Antigua y Barbuda', ' Antigua y Barbuda'), (' Arabia Saudita', ' Arabia Saudita'), (' Argelia', ' Argelia'), (' Argentina', ' Argentina'), (' Armenia', ' Armenia'), (' Australia', ' Australia'), (' Austria', ' Austria'), (' Azerbaiyán', ' Azerbaiyán'), (' Bahamas', ' Bahamas'), (' Bangladés', ' Bangladés'), (' Barbados', ' Barbados'), (' Baréin', ' Baréin'), (' Bélgica', ' Bélgica'), (' Belice', ' Belice'), (' Benín', ' Benín'), (' Bielorrusia', ' Bielorrusia'), (' Birmania/Myanmar', ' Birmania/Myanmar'), (' Bolivia', ' Bolivia'), (' Bosnia y Herzegovina', ' Bosnia y Herzegovina'), (' Botsuana', ' Botsuana'), (' Brasil', ' Brasil'), (' Brunéi', ' Brunéi'), (' Bulgaria', ' Bulgaria'), (' Burkina Faso', ' Burkina Faso'), (' Burundi', ' Burundi'), (' Bután', ' Bután'), (' Cabo Verde', ' Cabo Verde'), (' Camboya', ' Camboya'), (' Camerún', ' Camerún'), (' Canadá', ' Canadá'), (' Catar', ' Catar'), (' Chad', ' Chad'), (' Chile', ' Chile'), (' China', ' China'), (' Chipre', ' Chipre'), (' Ciudad del Vaticano', ' Ciudad del Vaticano'), (' Colombia', ' Colombia'), (' Comoras', ' Comoras'), (' Corea del Norte', ' Corea del Norte'), (' Corea del Sur', ' Corea del Sur'), (' Costa de Marfil', ' Costa de Marfil'), (' Costa Rica', ' Costa Rica'), (' Croacia', ' Croacia'), (' Cuba', ' Cuba'), (' Dinamarca', ' Dinamarca'), (' Dominica', ' Dominica'), (' Ecuador', ' Ecuador'), (' Egipto', ' Egipto'), (' El Salvador', ' El Salvador'), (' Emiratos Árabes Unidos', ' Emiratos Árabes Unidos'), (' Eritrea', ' Eritrea'), (' Eslovaquia', ' Eslovaquia'), (' Eslovenia', ' Eslovenia'), (' España', ' España'), (' Estados Unidos', ' Estados Unidos'), (' Estonia', ' Estonia'), (' Etiopía', ' Etiopía'), (' Filipinas', ' Filipinas'), (' Finlandia', ' Finlandia'), (' Fiyi', ' Fiyi'), (' Francia', ' Francia'), (' Gabón', ' Gabón'), (' Gambia', ' Gambia'), (' Georgia', ' Georgia'), (' Ghana', ' Ghana'), (' Granada', ' Granada'), (' Grecia', ' Grecia'), (' Guatemala', ' Guatemala'), (' Guyana', ' Guyana'), (' Guinea', ' Guinea'), (' Guinea-Bisáu', ' Guinea-Bisáu'), (' Guinea Ecuatorial', ' Guinea Ecuatorial'), (' Haití', ' Haití'), (' Honduras', ' Honduras'), (' Hungría', ' Hungría'), (' India', ' India'), (' Indonesia', ' Indonesia'), (' Irak', ' Irak'), (' Irán', ' Irán'), (' Irlanda', ' Irlanda'), (' Islandia', ' Islandia'), (' Islas Marshall', ' Islas Marshall'), (' Islas Salomón', ' Islas Salomón'), (' Israel', ' Israel'), (' Italia', ' Italia'), (' Jamaica', ' Jamaica'), (' Japón', ' Japón'), (' Jordania', ' Jordania'), (' Kazajistán', ' Kazajistán'), (' Kenia', ' Kenia'), (' Kirguistán', ' Kirguistán'), (' Kiribati', ' Kiribati'), (' Kuwait', ' Kuwait'), (' Laos', ' Laos'), (' Lesoto', ' Lesoto'), (' Letonia', ' Letonia'), (' Líbano', ' Líbano'), (' Liberia', ' Liberia'), (' Libia', ' Libia'), (' Liechtenstein', ' Liechtenstein'), (' Lituania', ' Lituania'), (' Luxemburgo', ' Luxemburgo'), (' Macedonia del Norte', ' Macedonia del Norte'), (' Madagascar', ' Madagascar'), (' Malasia', ' Malasia'), (' Malaui', ' Malaui'), (' Maldivas', ' Maldivas'), (' Malí', ' Malí'), (' Malta', ' Malta'), (' Marruecos', ' Marruecos'), (' Mauricio', ' Mauricio'), (' Mauritania', ' Mauritania'), (' México', ' México'), (' Micronesia', ' Micronesia'), (' Moldavia', ' Moldavia'), (' Mónaco', ' Mónaco'), (' Mongolia', ' Mongolia'), (' Montenegro', ' Montenegro'), (' Mozambique', ' Mozambique'), (' Namibia', ' Namibia'), (' Nauru', ' Nauru'), (' Nepal', ' Nepal'), (' Nicaragua', ' Nicaragua'), (' Níger', ' Níger'), (' Nigeria', ' Nigeria'), (' Noruega', ' Noruega'), (' Nueva Zelanda', ' Nueva Zelanda'), (' Omán', ' Omán'), (' Países Bajos', ' Países Bajos'), (' Pakistán', ' Pakistán'), (' Palaos', ' Palaos'), (' Panamá', ' Panamá'), (' Papúa Nueva Guinea', ' Papúa Nueva Guinea'), (' Paraguay', ' Paraguay'), (' Perú', ' Perú'), (' Polonia', ' Polonia'), (' Portugal', ' Portugal'), (' Reino Unido de Gran Bretaña e Irlanda del Norte', ' Reino Unido de Gran Bretaña e Irlanda del Norte'), (' República Centroafricana', ' República Centroafricana'), (' República Checa', ' República Checa'), (' República del Congo', ' República del Congo'), (' República Democrática del Congo', ' República Democrática del Congo'), (' República Dominicana', ' República Dominicana'), (' República Sudafricana', ' República Sudafricana'), (' Ruanda', ' Ruanda'), (' Rumanía', ' Rumanía'), (' Rusia', ' Rusia'), (' Samoa', ' Samoa'), (' San Cristóbal y Nieves', ' San Cristóbal y Nieves'), (' San Marino', ' San Marino'), (' San Vicente y las Granadinas', ' San Vicente y las Granadinas'), (' Santa Lucía', ' Santa Lucía'), (' Santo Tomé y Príncipe', ' Santo Tomé y Príncipe'), (' Senegal', ' Senegal'), (' Serbia', ' Serbia'), (' Seychelles', ' Seychelles'), (' Sierra Leona', ' Sierra Leona'), (' Singapur', ' Singapur'), (' Siria', ' Siria'), (' Somalia', ' Somalia'), (' Sri Lanka', ' Sri Lanka'), (' Suazilandia', ' Suazilandia'), (' Sudán', ' Sudán'), (' Sudán del Sur', ' Sudán del Sur'), (' Suecia', ' Suecia'), (' Suiza', ' Suiza'), (' Surinam', ' Surinam'), (' Tailandia', ' Tailandia'), (' Tanzania', ' Tanzania'), (' Tayikistán', ' Tayikistán'), (' Timor Oriental', ' Timor Oriental'), (' Togo', ' Togo'), (' Tonga', ' Tonga'), (' Trinidad y Tobago', ' Trinidad y Tobago'), (' Túnez', ' Túnez'), (' Turkmenistán', ' Turkmenistán'), (' Turquía', ' Turquía'), (' Tuvalu', ' Tuvalu'), (' Ucrania', ' Ucrania'), (' Uganda', ' Uganda'), (' Uruguay', ' Uruguay'), (' Uzbekistán', ' Uzbekistán'), (' Vanuatu', ' Vanuatu'), (' Venezuela', ' Venezuela'), (' Vietnam', ' Vietnam'), (' Yemen', ' Yemen'), (' Yibuti', ' Yibuti'), (' Zambia', ' Zambia'), (' Zimbabue', ' Zimbabue'), ('Sin especificar', 'Sin especificar')], default='Sin especificar', max_length=65, null=True, verbose_name='País')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'db_table': 'PAISES',
                'ordering': ['pais_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Poblaciones',
            fields=[
                ('id_poblacion', models.AutoField(primary_key=True, serialize=False)),
                ('poblacion_descripcion', models.CharField(max_length=65, verbose_name='Población')),
                ('codigo_postal', models.CharField(max_length=6, verbose_name='Código Postal')),
            ],
            options={
                'verbose_name': 'Población',
                'verbose_name_plural': 'Poblaciones',
                'db_table': 'POBLACIONES',
                'ordering': ['poblacion_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Propiedadcontratoalquiler',
            fields=[
                ('id_propiedad_contrato_alquiler', models.AutoField(primary_key=True, serialize=False)),
                ('propiedad_contrato_alquiler_fecha_inicio', models.DateField(verbose_name='Fecha Inicio del Contrato de Alquiler')),
                ('propiedad_contrato_alquiler_fecha_fin', models.DateField(verbose_name='Fecha Fin del Contrato de Alquiler')),
                ('propiedad_contrato_alquiler_fecha_cese', models.DateField(blank=True, null=True, verbose_name='Fecha Cese del Contrato de Alquiler')),
                ('propiedad_contrato_alquiler_duracion', models.IntegerField(verbose_name='Duración del contrato de alquiler')),
                ('propiedad_contrato_alquiler_fianza_origen', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Monto inicial de fianza')),
                ('propiedad_contrato_alquiler_mensual_origen', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Monto mensual al inicio Contrato')),
                ('propiedad_contrato_alquiler_valor_garantia', models.IntegerField(verbose_name='Monto de la garantía')),
                ('propiedad_contrato_alquiler_estado', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, null=True, verbose_name='Estado del Contrato de Alquiler')),
                ('observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Contrato de Alquiler de la Propiedad',
                'db_table': 'PROPIEDAD_CONTRATO_ALQUILER',
                'ordering': ['propiedad_contrato_alquiler_estado', 'propiedad_contrato_alquiler_fecha_cese'],
            },
        ),
        migrations.CreateModel(
            name='Secuenciacomprobante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_comprobante', models.CharField(choices=[('FACTURA', 'Factura'), ('NOTA de DÉBITO', 'Nota de Débito'), ('NOTA de CRÉDITO', 'Nota de Crédito'), ('RECIBO', 'Recibo'), ('LIQUIDACIÓN', 'Liquidación')], max_length=50, unique=True, verbose_name='Tipo de Comprobante')),
                ('ultimo_numero', models.IntegerField(default=1)),
                ('tipo_comprobante_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='Sin especificar', max_length=20, verbose_name='Estado del tipo de Comprobante')),
            ],
            options={
                'verbose_name': 'Secuencia Comprobante',
                'db_table': 'SecuenciaComprobante',
                'ordering': ['tipo_comprobante_estado', 'tipo_comprobante'],
            },
        ),
        migrations.CreateModel(
            name='Tipocesecontrato',
            fields=[
                ('id_tipo_cese_contrato', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_cese_contrato_descripcion', models.CharField(blank=True, choices=[('Incumplimiento en los pagos', 'Incumplimiento en los pagos'), ('Impago de la fianza o de su actualización', 'Impago de la fianza o de su actualización'), ('Subarriendo o cesión de la vivienda arrendada sin consentimiento', 'Subarriendo o cesión de la vivienda arrendada sin consentimiento'), ('Realizar obras no consentidas', 'Realizar obras no consentidas'), ('Destino de la vivienda a otros usos', 'Destino de la vivienda a otros usos'), ('Realización de actividades molestas, insalubres, nocivas, peligrosas o ilícitas', 'Realización de actividades molestas, insalubres, nocivas, peligrosas o ilícitas'), ('Finalización del plazo', 'Finalización del plazo'), ('Disconformidad en el servicio de la gestión', 'Disconformidad en el servicio de la gestión'), ('Venta del inmueble', 'Venta del inmueble'), ('Cese anticipado por temas ajenos a la gestión o el inmueble', 'Cese anticipado por temas ajenos a la gestión o el inmueble'), ('------------------------', '------------------------')], max_length=100, null=True, verbose_name='Tipo Cese de Contrato')),
                ('tipo_cese_contrato_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado del tipo Contrato')),
            ],
            options={
                'verbose_name': 'Cese de Contrato Tipo',
                'db_table': 'TIPO_CESE_CONTRATO',
                'ordering': ['tipo_cese_contrato_estado', 'tipo_cese_contrato_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipocontrato',
            fields=[
                ('id_tipo_contrato', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_contrato_descripcion', models.CharField(choices=[('ALQUILER', 'ALQUILER'), ('ADMINISTRACIÓN', 'ADMINISTRACIÓN'), ('', 'Sin especificar')], max_length=25, verbose_name='Tipo de Contrato')),
                ('tipo_contrato_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado del tipo de Contrato')),
            ],
            options={
                'verbose_name': 'Contrato Tipo',
                'db_table': 'TIPO_CONTRATO',
                'ordering': ['tipo_contrato_estado', 'tipo_contrato_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipodeduccion',
            fields=[
                ('id_tipo_deduccion', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_deduccion_descripcion', models.CharField(choices=[('g&s1', 'Tasa de basura (G)'), ('g&s2', 'IBI (G)'), ('g&s3', 'Comunidad (G)'), ('g&s4', 'Seguro del hogar (G)'), ('g&s5', 'Luz (S)'), ('g&s6', 'Agua (S)'), ('g&s7', 'Gas (S)'), ('g&s8', 'Internet (S)'), ('g&s9', 'Electricista (G)'), ('g&s10', 'Calefacción (G)'), ('g&s11', 'Fontanero (G)'), ('g&s12', 'Manitas (G)'), ('g&s13', 'Aire Acondicionado (G)'), ('g&s14', 'Electrodomésticos (G)'), ('g&s15', 'Calderas (G)'), ('g&s16', 'Persianista (G)'), ('g&s17', 'Albañil (G)'), ('g&s9', 'Gastos venta inmueble'), ('g&s9', 'Otro')], max_length=30, verbose_name='Servicios & Gastos')),
                ('tipo_deduccion_categoria', models.CharField(choices=[('S', 'Servicio'), ('G', 'Gasto'), ('I', 'Ingreso por venta'), ('0', '------------------')], default='0', max_length=25, verbose_name='Categoría deducción')),
            ],
            options={
                'verbose_name': 'Tipo Gastos & Servicios',
                'db_table': 'TIPO_DEDUCCION',
                'ordering': ['tipo_deduccion_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipodoc',
            fields=[
                ('id_tipo_doc', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_doc_descripcion', models.CharField(blank=True, choices=[('DNI', 'DNI'), ('NIF', 'NIF'), ('NIE', 'NIE'), ('IVA', 'IVA'), ('PASAPORTE', 'PASAPORTE'), ('Permiso residencia', 'Permiso residencia'), ('LC', 'LC'), ('LE', 'LE'), ('Licencia de Conducir', 'Licencia de Conducir')], max_length=25, null=True, verbose_name='Tipo de Documento')),
                ('tipo_doc_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado del tipo de Documento')),
            ],
            options={
                'verbose_name': 'Documento Tipo',
                'db_table': 'TIPO_DOCUMENTO',
                'ordering': ['tipo_doc_estado', 'tipo_doc_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipopagos',
            fields=[
                ('id_tipo_pagos', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_pagos_descripcion', models.CharField(blank=True, choices=[('pagos1', 'Efectivo'), ('pagos2', 'Tarjeta de débito'), ('pagos3', 'Tarjeta de crédito'), ('pagos4', 'Transferencia'), ('pagos5', 'Bizum'), ('pagos6', 'Cheque'), ('pagos7', 'PayPal'), ('pagos8', 'Otro')], max_length=25, null=True, verbose_name='Forma de pago')),
                ('tipo_pagos_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado Tipo de Pagos')),
            ],
            options={
                'verbose_name': 'Tipo de pago',
                'db_table': 'TIPO_PAGOS',
                'ordering': ['tipo_pagos_estado', 'tipo_pagos_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Tipoprop',
            fields=[
                ('id_tipo_propiedades', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_prop_descripcion', models.CharField(blank=True, choices=[('piso', 'piso'), ('estudio', 'estudio'), ('ático', 'ático'), ('loft', 'loft'), ('bajo con jardín', 'bajo con jardín'), ('adosada', 'adosada'), ('duplex', 'duplex'), ('chalet adosado', 'chalet adosado'), ('chalet individual', 'chalet individual'), ('mansión', 'mansión'), ('villa', 'villa'), ('local comercial', 'local comercial'), ('despacho', 'despacho'), ('nave agrícola', 'nave agrícola'), ('nave comercial', 'nave comercial'), ('nave industrial', 'nave industrial'), ('nave logística', 'nave logística'), ('terreno residencial', 'terreno residencial'), ('terreno comercial', 'terreno comercial'), ('terreno no urbanizable', 'terreno no urbanizable'), ('garage', 'garage'), ('trastero', 'trastero')], max_length=25, null=True, verbose_name='Tipo de Propiedades')),
                ('tipo_prop_estado', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, null=True, verbose_name='Estado de la propiedad')),
            ],
            options={
                'verbose_name': 'Propiedad Tipo',
                'db_table': 'TIPO_PROPIEDAD',
                'ordering': ['tipo_prop_estado', 'tipo_prop_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Provincias',
            fields=[
                ('id_provincia', models.AutoField(primary_key=True, serialize=False)),
                ('provincia_descripcion', models.CharField(blank=True, choices=[(' A Coruña', ' A Coruña'), (' Álava', ' Álava'), (' Albacete', ' Albacete'), (' Alicante', ' Alicante'), (' Almería', ' Almería'), (' Asturias', ' Asturias'), (' Ávila', ' Ávila'), (' Badajoz', ' Badajoz'), (' Baleares', ' Baleares'), (' Barcelona', ' Barcelona'), (' Burgos', ' Burgos'), (' Cáceres', ' Cáceres'), (' Cádiz', ' Cádiz'), (' Cantabria', ' Cantabria'), (' Castellón', ' Castellón'), (' Ciudad Real', ' Ciudad Real'), (' Córdoba', ' Córdoba'), (' Cuenca', ' Cuenca'), (' Girona', ' Girona'), (' Granada', ' Granada'), (' Guadalajara', ' Guadalajara'), (' Gipuzkoa', ' Gipuzkoa'), (' Huelva', ' Huelva'), (' Huesca', ' Huesca'), (' Jaén', ' Jaén'), (' La Rioja', ' La Rioja'), (' Las Palmas', ' Las Palmas'), (' León', ' León'), (' Lérida', ' Lérida'), (' Lugo', ' Lugo'), (' Madrid', ' Madrid'), (' Málaga', ' Málaga'), (' Murcia', ' Murcia'), (' Navarra', ' Navarra'), (' Ourense', ' Ourense'), (' Palencia', ' Palencia'), (' Pontevedra', ' Pontevedra'), (' Salamanca', ' Salamanca'), (' Segovia', ' Segovia'), (' Sevilla', ' Sevilla'), (' Soria', ' Soria'), (' Tarragona', ' Tarragona'), (' Santa Cruz de Tenerife', ' Santa Cruz de Tenerife'), (' Teruel', ' Teruel'), (' Toledo', ' Toledo'), (' Valencia', ' Valencia'), (' Valladolid', ' Valladolid'), (' Vizcaya', ' Vizcaya'), (' Zamora', ' Zamora'), (' Zaragoza', ' Zaragoza'), ('Sin especificar', 'Sin especificar')], default='Sin especificar', max_length=65, null=True, verbose_name='Provincia')),
                ('fk_Provincias_Paises', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.paises', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
                'db_table': 'PROVINCIAS',
                'ordering': ['provincia_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Proveedores',
            fields=[
                ('id_proveedores', models.AutoField(primary_key=True, serialize=False)),
                ('proveedores_descripcion', models.CharField(max_length=255, null=True, verbose_name='Proveedores')),
                ('proveedores_calle', models.CharField(max_length=255, null=True, verbose_name='Calle')),
                ('proveedores_numero', models.CharField(max_length=255, null=True, verbose_name='Número')),
                ('proveedores_piso', models.CharField(max_length=255, null=True, verbose_name='Piso')),
                ('proveedores_departamento', models.CharField(max_length=255, null=True, verbose_name='Departamento')),
                ('proveedores_telefono1', models.CharField(max_length=65, null=True, verbose_name='Teléfono I')),
                ('proveedores_telefono2', models.CharField(max_length=65, null=True, verbose_name='Teléfono II')),
                ('proveedores_email', models.EmailField(max_length=254, null=True, verbose_name='E Mail')),
                ('proveedores_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, null=True, verbose_name='Estado Proveedores')),
                ('fk_Proveedores_Poblaciones', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.poblaciones', verbose_name='Población')),
            ],
            options={
                'verbose_name': 'Proveedores',
                'db_table': 'PROVEEDORES',
                'ordering': ['proveedores_descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Propiedades',
            fields=[
                ('id_propiedades', models.AutoField(primary_key=True, serialize=False)),
                ('protocolo', models.IntegerField(verbose_name='Número Protocolo')),
                ('prop_calle', models.CharField(max_length=255, verbose_name='Calle')),
                ('prop_numero', models.CharField(max_length=255, verbose_name='Número')),
                ('prop_piso', models.CharField(max_length=255, verbose_name='Piso')),
                ('prop_departamento', models.CharField(max_length=255, verbose_name='Departamento')),
                ('fecha_compra', models.DateField(verbose_name='Fecha Compra')),
                ('valor_compra', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Compra')),
                ('fecha_venta', models.DateField(blank=True, null=True, verbose_name='Fecha Venta')),
                ('valor_venta', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor Venta')),
                ('sup_construida', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Superficie Construída')),
                ('ano_construccion', models.IntegerField(blank=True, null=True, verbose_name='Año Construcción')),
                ('habitaciones', models.IntegerField(blank=True, null=True, verbose_name='Cantidad de Habitaciones')),
                ('banos', models.IntegerField(blank=True, null=True, verbose_name='Cantidad de Baños')),
                ('aseos', models.IntegerField(blank=True, null=True, verbose_name='Cantidad de Aseos')),
                ('cocina', models.CharField(choices=[('Y', 'SI'), ('N', 'NO')], max_length=2, verbose_name='Cocina')),
                ('terraza', models.CharField(choices=[('Y', 'SI'), ('N', 'NO')], max_length=2, verbose_name='Terraza')),
                ('observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
                ('fk_Propiedades_Contratos', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.contratos', verbose_name='Contrato Administración')),
                ('fk_Propiedades_Poblaciones', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.poblaciones', verbose_name='Población')),
                ('fk_Propiedades_Tipoprop', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipoprop', verbose_name='Tipo de propiedad')),
            ],
            options={
                'verbose_name': 'Propiedad',
                'verbose_name_plural': 'Propiedades',
                'db_table': 'PROPIEDADES',
                'ordering': ['protocolo'],
            },
        ),
        migrations.CreateModel(
            name='Propiedadeducciones',
            fields=[
                ('id_servicios', models.AutoField(primary_key=True, serialize=False)),
                ('servicios_medidor', models.CharField(max_length=255, null=True, verbose_name='Medidor servicio')),
                ('servicios_iban', models.CharField(max_length=255, null=True, verbose_name='Código IBAN-pago serv-')),
                ('servicios_pago_inquilinos', models.CharField(choices=[('Y', 'SI'), ('N', 'NO')], default='N', max_length=2, verbose_name='Corresponde al inquilino')),
                ('servicios_observaciones', models.CharField(max_length=255, null=True, verbose_name='Observaciones')),
                ('fk_Propiedadservicios_Propiedades', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.propiedades', verbose_name='Propiedad')),
                ('fk_Propiedadservicios_Proveedores', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.proveedores', verbose_name='Proveedor')),
                ('fk_Propiedadservicios_Tipodeduccion', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipodeduccion', verbose_name='Tipo de deducción')),
            ],
            options={
                'verbose_name': 'Servicios de la Propiedad',
                'db_table': 'PROPIEDAD_DEDUCCIONES',
            },
        ),
        migrations.CreateModel(
            name='Propiedadcontratogarante',
            fields=[
                ('id_garante', models.AutoField(primary_key=True, serialize=False)),
                ('garante', models.CharField(choices=[('Y', 'SI'), ('N', 'NO')], default='N', max_length=25, verbose_name='Garante')),
                ('garante_observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
                ('fk_Propiedadcontratogarante_Clientes', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.clientes', verbose_name='Cliente')),
                ('fk_Propiedadcontratogarante_Propiedadcontratoalquiler', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.propiedadcontratoalquiler', verbose_name='Contrato de alquiler')),
            ],
            options={
                'verbose_name': 'Garante Alquiler',
                'db_table': 'PROPIEDAD_CONTRATO_GARANTE',
            },
        ),
        migrations.CreateModel(
            name='Propiedadcontratoaumentos',
            fields=[
                ('id_aumentos', models.AutoField(primary_key=True, serialize=False)),
                ('aumentos_fecha_actualizacion', models.DateField(verbose_name='Fecha de actualización del contrato')),
                ('aumentos_indice', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Índice de aumento')),
                ('aumentos_fianza_actualizada', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Fianza actualizada')),
                ('aumentos_mensual_actualizado', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Mensual actualizado')),
                ('aumentos_observaciones', models.CharField(max_length=255, null=True, verbose_name='Observaciones')),
                ('fk_Propiedadcontratoaumentos_Propiedadcontratoalquiler', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.propiedadcontratoalquiler', verbose_name='Contrato de alquiler')),
            ],
            options={
                'verbose_name': 'Actualización contrato alquiler',
                'verbose_name_plural': 'Actualizaciones del contrato de alquiler',
                'db_table': 'PROPIEDAD_CONTRATO_AUMENTOS',
                'ordering': ['aumentos_fecha_actualizacion', 'aumentos_indice'],
            },
        ),
        migrations.CreateModel(
            name='Propiedadcontratoalquiler_INTERMEDIA_Clientes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appMEGA.clientes')),
                ('propiedadcontratoalquiler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appMEGA.propiedadcontratoalquiler')),
            ],
        ),
        migrations.AddField(
            model_name='propiedadcontratoalquiler',
            name='fk_Propiedadcontratoalquiler_Clientes',
            field=models.ManyToManyField(blank=True, related_name='propiedades_contrato_alquiler', through='appMEGA.Propiedadcontratoalquiler_INTERMEDIA_Clientes', to='appMEGA.Clientes', verbose_name='Arrendatarios'),
        ),
        migrations.AddField(
            model_name='propiedadcontratoalquiler',
            name='fk_Propiedadcontratoalquiler_Propiedades',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.propiedades', verbose_name='Propiedad'),
        ),
        migrations.AddField(
            model_name='propiedadcontratoalquiler',
            name='fk_Propiedadcontratoalquiler_Tipocesecontrato',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipocesecontrato', verbose_name='Tipo de cese de Contrato'),
        ),
        migrations.AddField(
            model_name='propiedadcontratoalquiler',
            name='fk_Propiedadcontratoalquiler_Tipocontrato',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipocontrato', verbose_name='Tipo de Contrato'),
        ),
        migrations.AddField(
            model_name='poblaciones',
            name='fk_Poblaciones_Provincias',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.provincias', verbose_name='Provincia'),
        ),
        migrations.CreateModel(
            name='Pagos',
            fields=[
                ('id_pagos', models.AutoField(primary_key=True, serialize=False)),
                ('pago_numero', models.IntegerField(default='0', verbose_name='Número de Pago')),
                ('pago_fecha', models.DateField(null=True, verbose_name='Fecha Pago')),
                ('pago_importe', models.PositiveIntegerField(default='0', verbose_name='Importe Pago')),
                ('fk_Pagos_Bancos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.bancos', verbose_name='Banco')),
                ('fk_Pagos_Comprobantesencabezado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.comprobantesencabezado', verbose_name='Encabezado de comprobante')),
                ('fk_Pagos_Empresas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.empresas', verbose_name='Empresa')),
                ('fk_Pagos_Liquidacionencabezado', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.liquidacionencabezado', verbose_name='Encabezado de liquidación')),
                ('fk_Pagos_Secuenciacomprobante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.secuenciacomprobante', verbose_name='Tipo de comprobante')),
                ('fk_Pagos_Tipopagos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipopagos', verbose_name='Tipo de pago')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
                'db_table': 'PAGOS',
                'ordering': ['pago_numero'],
            },
        ),
        migrations.AddField(
            model_name='liquidacionencabezado',
            name='fk_Liquidacionenc_Propiedadcontratoalquiler',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.propiedadcontratoalquiler', verbose_name='Contratos de alquiler'),
        ),
        migrations.AddField(
            model_name='liquidacionencabezado',
            name='fk_Liquidacionenc_Tipocontrato',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipocontrato', verbose_name='Tipo de Contrato'),
        ),
        migrations.CreateModel(
            name='Liquidaciondetalle',
            fields=[
                ('id_detalle_liquidacion', models.AutoField(primary_key=True, serialize=False)),
                ('detalle_liquidacion_importe', models.DecimalField(decimal_places=0, max_digits=10, verbose_name='Monto item liquidado')),
                ('fk_Liquidaciondetalle_Itemsliquidacion', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.itemsliquidacion', verbose_name='Detalles de liquidación')),
                ('fk_Liquidaciondetalle_Liquidacionencabezado', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.liquidacionencabezado', verbose_name='Encabezado de liquidación')),
            ],
            options={
                'verbose_name': 'Detalle de items liquidados',
                'db_table': 'LIQUIDACION_DETALLE',
                'ordering': ['detalle_liquidacion_importe'],
            },
        ),
        migrations.AddField(
            model_name='empresas',
            name='fk_Empresas_Poblaciones',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.poblaciones', verbose_name='Poblacion'),
        ),
        migrations.AddField(
            model_name='empresas',
            name='fk_Empresas_Tipodoc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipodoc', verbose_name='Tipo de documento'),
        ),
        migrations.CreateModel(
            name='Empleados',
            fields=[
                ('id_empleados', models.AutoField(primary_key=True, serialize=False)),
                ('empleado_legajo', models.IntegerField(blank=True, null=True, verbose_name='Número Legajo')),
                ('empleado_documento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Documento')),
                ('empleado_cuil', models.CharField(max_length=255, verbose_name='Cuil')),
                ('empleado_fecha_alta', models.DateField(blank=True, null=True, verbose_name='Fecha Alta de Empleado')),
                ('empleado_fecha_baja', models.DateField(blank=True, null=True, verbose_name='Fecha Baja de Empleado')),
                ('empleado_fecha_nac', models.DateField(blank=True, null=True, verbose_name='Fecha Nacimiento Emleado')),
                ('empleado_apellido', models.CharField(blank=True, max_length=255, null=True, verbose_name='Apellido')),
                ('empleado_nombre', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre')),
                ('empleado_calle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calle')),
                ('empleado_numero', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('empleado_piso', models.CharField(blank=True, max_length=255, null=True, verbose_name='Piso')),
                ('empleado_departamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Departamento')),
                ('empleado_telefono1', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono I')),
                ('empleado_telefono2', models.CharField(blank=True, max_length=65, null=True, verbose_name='Teléfono II')),
                ('empleado_fax', models.CharField(blank=True, max_length=65, null=True, verbose_name='Fax')),
                ('empleado_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E Mail')),
                ('empleado_categoria', models.CharField(blank=True, choices=[('categ1', 'Administración'), ('categ2', 'Finanzas'), ('categ3', 'IT')], max_length=25, null=True, verbose_name='Categoría Empleado')),
                ('empleado_estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('BAJA', 'Baja'), ('Sin especificar', 'Sin especificar')], default='0', max_length=20, verbose_name='Estado del Empleado')),
                ('empleado_observaciones', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observaciones')),
                ('fk_Empleados_Empresas', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.empresas', verbose_name='Empresa')),
                ('fk_Empleados_Poblaciones', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.poblaciones', verbose_name='Población')),
                ('fk_Empleados_Tipodoc', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipodoc', verbose_name='Tipo de documento')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'db_table': 'EMPLEADOS',
                'ordering': ['empleado_estado', 'empleado_apellido', 'empleado_nombre'],
            },
        ),
        migrations.AddField(
            model_name='contratos',
            name='fk_Contratos_Empresas',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.empresas', verbose_name='Arrendador'),
        ),
        migrations.AddField(
            model_name='contratos',
            name='fk_Contratos_Tipocesecontrato',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipocesecontrato', verbose_name='Tipo de cese de Contrato'),
        ),
        migrations.AddField(
            model_name='contratos',
            name='fk_Contratos_Tipocontrato',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipocontrato', verbose_name='Tipo de Contrato'),
        ),
        migrations.AddField(
            model_name='comprobantesencabezado',
            name='fk_Comprobantesencabezado_Empresas',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.empresas', verbose_name='Empresa'),
        ),
        migrations.AddField(
            model_name='comprobantesencabezado',
            name='fk_Comprobantesencabezado_Liquidacionesencabezado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.liquidacionencabezado', verbose_name='Encabezado de liquidación'),
        ),
        migrations.AddField(
            model_name='comprobantesencabezado',
            name='fk_Comprobantesencabezado_Secuenciacomprobante',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='appMEGA.secuenciacomprobante', verbose_name='Tipo de Comprobante'),
        ),
        migrations.CreateModel(
            name='Comprobantedetalle',
            fields=[
                ('id_comprobante_detalle', models.AutoField(primary_key=True, serialize=False)),
                ('comprobante_detalle_importe', models.PositiveIntegerField(default=0, verbose_name='Importe')),
                ('comprobante_detalle_iva', models.PositiveIntegerField(default=0, verbose_name='IVA')),
                ('comprobante_detalle_irpf', models.PositiveIntegerField(default=0, verbose_name='irpf')),
                ('fk_Comprobantedetalle_Comprobantesencabezado', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.comprobantesencabezado', verbose_name='Encabezado de comprobante')),
                ('fk_Comprobantedetalle_Liquidaciondetalle', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.liquidaciondetalle', verbose_name='Detalle de liquidación')),
                ('fk_Comprobantedetalle_Liquidacionencabezado', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.liquidacionencabezado', verbose_name='Encabezado de liquidación')),
            ],
            options={
                'verbose_name': 'Detalle del comprobante',
                'db_table': 'COMPROBANTE_DETALLE',
                'ordering': ['comprobante_detalle_importe'],
            },
        ),
        migrations.AddField(
            model_name='clientes',
            name='fk_Clientes_Poblaciones',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.poblaciones', verbose_name='Población'),
        ),
        migrations.AddField(
            model_name='clientes',
            name='fk_Clientes_Tipodoc',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.RESTRICT, to='appMEGA.tipodoc', verbose_name='Tipo de documento'),
        ),
    ]
